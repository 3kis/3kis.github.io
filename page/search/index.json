[{"content":"Hello hugo ","date":"2023-06-24T00:00:00Z","image":"http://example.org/post/firstpost/cover_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"http://example.org/post/firstpost/","title":"Markdown Syntax Guide"},{"content":"hugo上手使用 安装\n在win10下推荐使用 scoop install hugo-extended 来安装hugo的拓展版，基础版本与拓展版本的命令一样，但是extended版本有更好的效果。\n使用hugo命令新建一个能让hugo识别的目录\nhugo new site blog 其中blog是自定义的目录名\n进入目录\ncd blog 在blog目录下git clone主题\n这里需要将stack主题fork到自己的github，以便于后续的修改能够push 注意！！ 如果想要后面能够使用github action，那么必须必须必须使用submodule的方式引入！！而不能是git clone的方式\ngit clone xxxx.git themes/stack\ngit submodule add xxxx.git themes/stack stack这个目录名是自定义的\n修改根目录config.toml\n在文件中添加\ntheme = \u0026#39;stack\u0026#39; 在根目录下执行命令来构建\nhugo 运行查看网站效果\nhugo server 完整命令行步骤\nhugo new site blog cd blog git submodule add your_stack_repo.git themes/stack echo theme=\u0026#39;stack\u0026#39; \u0026gt;\u0026gt; config.toml hugo hugo server DIY环节 上面的步骤只能让我们看到网站简单的效果并上传文件，还需要做进一步的美化。\n静态文件处理 将themes/stack/exampleSite/content/的page目录复制到blog目录的content目录下 这样你就有了下面这几个在左侧边栏 ","date":"0001-01-01T00:00:00Z","image":"http://example.org/post/hugo-best-practice/cover_hu3d03a01dcc18bc5be0e67db3d8d209a6_820599_120x120_fill_q75_box_smart1.jpg","permalink":"http://example.org/post/hugo-best-practice/","title":"Hugo 最佳实践"}]